cmake_minimum_required (VERSION 3.15)

include(FetchContent)

project("Demo" VERSION 0.1.0)

set (CMAKE_CXX_STANDARD 20)
set (CMAKE_CXX_STANDARD_REQUIRED True)

set_property(GLOBAL PROPERTY USE_FOLDERS On)

# Add data files
file(GLOB_RECURSE DATA_FILES data/*)
source_group("data/" FILES ${DATA_FILES})
foreach(DATA ${DATA_FILES})
    get_filename_component(FILE_NAME ${DATA} NAME)
    get_filename_component(PATH_NAME ${DATA} DIRECTORY)
    get_filename_component(EXTENSION ${DATA} EXT)
    file(RELATIVE_PATH PATH_NAME "${PROJECT_SOURCE_DIR}" ${PATH_NAME})
    set(DATA_OUTPUT "${PROJECT_BINARY_DIR}/${PATH_NAME}/${FILE_NAME}")
    add_custom_command(
            OUTPUT ${DATA_OUTPUT}
            DEPENDS ${DATA}
            DEPENDS
            COMMAND ${CMAKE_COMMAND} -E copy ${DATA} "${PROJECT_BINARY_DIR}/${PATH_NAME}/${FILE_NAME}"
    )
    list(APPEND DATA_BINARY_FILES ${DATA_OUTPUT})
endforeach()

add_custom_target(
    DataTarget-${PROJECT_NAME}
    DEPENDS ${DATA_BINARY_FILES} ${DATA_FILES})

# Get SFML and spdlog libraries
set(SFML_VERSION "2.6.x")

FetchContent_Declare(
    sfml
    GIT_REPOSITORY "https://github.com/SFML/SFML.git"
    GIT_TAG        "${SFML_VERSION}"
)
FetchContent_MakeAvailable(sfml)

include_directories(include/)

set(SOURCE
    "src/main.cpp" 
    "src/Entity.cpp" 
    "src/Circle.cpp" 
    "src/AabbBox.cpp" 
    "src/DemoBallsAndCube.cpp" 
    "src/Box.cpp"
)

#add_executable(${PROJECT_NAME} ${SOURCE})
add_executable(${PROJECT_NAME} WIN32 ${SOURCE})

# Add data dependencies
add_dependencies(${PROJECT_NAME} DataTarget-${PROJECT_NAME})

# Link libraries
target_link_libraries(${PROJECT_NAME} PRIVATE StowyPhysicsEngine)

target_link_libraries(${PROJECT_NAME} PRIVATE sfml-graphics sfml-window sfml-system)

if(WIN32)
    target_link_libraries(${PROJECT_NAME} PRIVATE sfml-main)
endif()

if (WIN32 AND BUILD_SHARED_LIBS)
    add_custom_command(TARGET ${PROJECT_NAME} POST_BUILD
        COMMAND ${CMAKE_COMMAND} -E copy $<TARGET_RUNTIME_DLLS:${PROJECT_NAME}> $<TARGET_FILE_DIR:${PROJECT_NAME}> COMMAND_EXPAND_LISTS)
endif()

install(TARGETS ${PROJECT_NAME})